#!/usr/bin/env python
# -*- mode: python; coding: utf-8; -*-

"""
Parse input text into elementary discourse segments and output them.

USAGE:
discourse_segmenter [OPTIONS] [FILEs]

@author: Wladimir Sidorenko <Uladzimir Sidarenka>

"""

##################################################################
# Libraries
from dsegmenter import bparseg, edseg

import argparse
import sys
# from conll import CONLL
# from edseg import EDSSegmenter

##################################################################
# Constants and Variables
DEFAULT_ENC = "utf-8"
Segmenter = None

##################################################################
# Methods

def main(argv):
    """
    Read input text and segment it into elementary discourse units.

    @param argv - command line arguments

    @return \c 0 on success, non-\c 0 otherwise
    """
    # process arguments
    parser = argparse.ArgumentParser(description = """Script for segmenting text
into elementary discourse units.""")
    parser.add_argument("-e", "--encoding", help = "input encoding of text", nargs = 1, \
                        type = str, default = DEFAULT_ENC)
    parser.add_argument("-s", "--skip-line", help = """lines which should be ignored during the
processing and output without changes (defaults to empty lines)""", nargs = 1, type = str, \
                        default = "")
    parser.add_argument("-t", "--type", help = "type of discourse segmenter to use", \
                            choices = ("edseg", "bparseg"))
    parser.add_argument("files", help="input files", nargs = '*', metavar="file")
    args = parser.parse_args()

    # initialize segmenter

##################################################################
# Main
if __name__ == "__main__":
    main(sys.argv[1:])
